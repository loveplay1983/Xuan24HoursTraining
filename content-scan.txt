7_Tracking/going_modular/going_modular/predictions.py:                transforms.Normalize(
8_ViT/going_modular/going_modular/predictions.py:                transforms.Normalize(
pytorch-deep-learning-main/docs/10_pytorch_profiling.ipynb:    "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/docs/06_pytorch_transfer_learning.ipynb:    "> normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/docs/06_pytorch_transfer_learning.ipynb:    "| 3 | A mean of `[0.485, 0.456, 0.406]` (values across each colour channel). | `torchvision.transforms.Normalize(mean=...)` to adjust the mean of our images.  |\n",
pytorch-deep-learning-main/docs/06_pytorch_transfer_learning.ipynb:    "| 4 | A standard deviation of `[0.229, 0.224, 0.225]` (values across each colour channel). | `torchvision.transforms.Normalize(std=...)` to adjust the standard deviation of our images.  | \n",
pytorch-deep-learning-main/docs/06_pytorch_transfer_learning.ipynb:    "    transforms.Normalize(mean=[0.485, 0.456, 0.406], # 3. A mean of [0.485, 0.456, 0.406] (across each colour channel)\n",
pytorch-deep-learning-main/docs/06_pytorch_transfer_learning.ipynb:    "            transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/docs/07_pytorch_experiment_tracking.ipynb:    "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/docs/07_pytorch_experiment_tracking.ipynb:    "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/docs/07_pytorch_experiment_tracking.ipynb:    "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], # values per colour channel [red, green, blue]\n",
pytorch-deep-learning-main/docs/08_pytorch_profiling.ipynb:    "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/going_modular/going_modular/predictions.py:                transforms.Normalize(
pytorch-deep-learning-main/video_notebooks/07_pytorch_experiment_tracking_video.ipynb:        "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/video_notebooks/07_pytorch_experiment_tracking_video.ipynb:        "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/video_notebooks/06_pytorch_transfer_learning_video.ipynb:        "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/video_notebooks/06_pytorch_transfer_learning_video.ipynb:        "                                          transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/06_pytorch_transfer_learning.ipynb:    "> normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/06_pytorch_transfer_learning.ipynb:    "| 3 | A mean of `[0.485, 0.456, 0.406]` (values across each colour channel). | `torchvision.transforms.Normalize(mean=...)` to adjust the mean of our images.  |\n",
pytorch-deep-learning-main/06_pytorch_transfer_learning.ipynb:    "| 4 | A standard deviation of `[0.229, 0.224, 0.225]` (values across each colour channel). | `torchvision.transforms.Normalize(std=...)` to adjust the standard deviation of our images.  | \n",
pytorch-deep-learning-main/06_pytorch_transfer_learning.ipynb:    "    transforms.Normalize(mean=[0.485, 0.456, 0.406], # 3. A mean of [0.485, 0.456, 0.406] (across each colour channel)\n",
pytorch-deep-learning-main/06_pytorch_transfer_learning.ipynb:    "            transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/extras/exercises/06_pytorch_transfer_learning_exercises.ipynb:        "    transforms.Normalize(mean=[0.485, 0.456, 0.406], # 3. A mean of [0.485, 0.456, 0.406] (across each colour channel)\n",
pytorch-deep-learning-main/extras/exercises/06_pytorch_transfer_learning_exercises.ipynb:        "    transforms.Normalize(mean=[0.485, 0.456, 0.406], # 3. A mean of [0.485, 0.456, 0.406] (across each colour channel)\n",
pytorch-deep-learning-main/extras/exercises/07_pytorch_experiment_tracking_exercise_template.ipynb:        "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], # values per colour channel [red, green, blue]\n",
pytorch-deep-learning-main/extras/solutions/06_pytorch_transfer_learning_exercise_solutions.ipynb:        "    transforms.Normalize(mean=[0.485, 0.456, 0.406], # 3. A mean of [0.485, 0.456, 0.406] (across each colour channel)\n",
pytorch-deep-learning-main/extras/solutions/06_pytorch_transfer_learning_exercise_solutions.ipynb:        "    transforms.Normalize(mean=[0.485, 0.456, 0.406], # 3. A mean of [0.485, 0.456, 0.406] (across each colour channel)\n",
pytorch-deep-learning-main/extras/solutions/06_pytorch_transfer_learning_exercise_solutions.ipynb:        "  transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/extras/solutions/07_pytorch_experiment_tracking_exercise_solutions.ipynb:        "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], # values per colour channel [red, green, blue]\n",
pytorch-deep-learning-main/extras/solutions/07_pytorch_experiment_tracking_exercise_solutions.ipynb:        "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], # values per colour channel [red, green, blue]\n",
pytorch-deep-learning-main/extras/solutions/07_pytorch_experiment_tracking_exercise_solutions.ipynb:        "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], # values per colour channel [red, green, blue]\n",
pytorch-deep-learning-main/07_pytorch_experiment_tracking.ipynb:    "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/07_pytorch_experiment_tracking.ipynb:    "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406],\n",
pytorch-deep-learning-main/07_pytorch_experiment_tracking.ipynb:    "normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], # values per colour channel [red, green, blue]\n",
